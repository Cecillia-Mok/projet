generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  user_id       Int      @id @default(autoincrement())
  pseudo        String
  email         String   @unique
  password      String
  role          String   @default("user")
  creation_date DateTime @default(now())

  games Game[] // 1-n relation
}

model Game {
  game_id         Int       @id @default(autoincrement())
  game_start_date DateTime
  game_end_date   DateTime?
  statut          String    @default("en cours")

  user_id Int
  user    User @relation(fields: [user_id], references: [user_id], onDelete: Cascade)

  cards    Card[] // 1-n relation
  GameCard GameCard[]
}

model Card {
  card_id   Int     @id @default(autoincrement())
  titre     String
  image_url String?
  texte     String
  statut    String  @default("continuer")

  choice     Choice[] // 1-n relation
  suivie_par Choice[] @relation("NextCard")

  gameCards   GameCard[]
  Game        Game?      @relation(fields: [gameGame_id], references: [game_id])
  gameGame_id Int?
}

model GameCard {
  game_id Int
  card_id Int

  game Game @relation(fields: [game_id], references: [game_id], onDelete: Cascade)
  card Card @relation(fields: [card_id], references: [card_id], onDelete: Cascade)

  @@id([game_id, card_id]) // cl√© primaire composite
}

model Choice {
  choice_id   Int    @id @default(autoincrement())
  texte       String
  consequence String?

  default_next_card Int?
  next_card         Card? @relation("NextCard", fields: [default_next_card], references: [card_id], onDelete: SetNull)

  card_id Int
  card    Card @relation(fields: [card_id], references: [card_id], onDelete: Cascade)
}
