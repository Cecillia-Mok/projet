generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  user_id       Int      @id @default(autoincrement())
  pseudo        String
  email         String   @unique
  password      String
  role          String   @default("user")
  creation_date DateTime @default(now())

  games Game[]
}

model Game {
  game_id         Int       @id @default(autoincrement())
  game_start_date DateTime
  game_end_date   DateTime?
  status          String    @default("en cours")

  user_id Int
  user    User @relation(fields: [user_id], references: [user_id], onDelete: Cascade)

  gameCards    GameCard[]
  gameChoices  GameChoice[]
}

model Card {
  card_id   Int     @id @default(autoincrement())
  title     String
  image_url String?
  text      String
  status    String  @default("continuer")

  choices     Choice[]
  suivie_par  Choice[] @relation("NextCard") // lien inverse du next_card_id
  gameCards   GameCard[]
  gameChoices GameChoice[]
}

model Choice {
  choice_id Int    @id @default(autoincrement())
  text      String
  consequence String?

  next_card_id Int?
  next_card    Card?  @relation("NextCard", fields: [next_card_id], references: [card_id])

  card_id Int
  card    Card @relation(fields: [card_id], references: [card_id])

  gameChoices GameChoice[]
}

model GameCard {
  game    Game @relation(fields: [game_id], references: [game_id], onDelete: Cascade)
  game_id Int

  card    Card @relation(fields: [card_id], references: [card_id], onDelete: Cascade)
  card_id Int

  @@id([game_id, card_id])
}

model GameChoice {
  game      Game   @relation(fields: [game_id], references: [game_id], onDelete: Cascade)
  game_id   Int

  card      Card   @relation(fields: [card_id], references: [card_id], onDelete: Cascade)
  card_id   Int

  choice    Choice @relation(fields: [choice_id], references: [choice_id], onDelete: Cascade)
  choice_id Int

  @@id([game_id, card_id, choice_id], name: "game_id_card_id_choice_id")
}
